// Generated by view binder compiler. Do not edit!
package com.example.loginapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.loginapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemDeviceBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView deviceIdText;

  @NonNull
  public final TextView deviceIpText;

  @NonNull
  public final TextView deviceNameText;

  @NonNull
  public final TextView devicePortText;

  @NonNull
  public final TextView deviceStatusText;

  @NonNull
  public final TextView deviceTypeText;

  private ItemDeviceBinding(@NonNull CardView rootView, @NonNull TextView deviceIdText,
      @NonNull TextView deviceIpText, @NonNull TextView deviceNameText,
      @NonNull TextView devicePortText, @NonNull TextView deviceStatusText,
      @NonNull TextView deviceTypeText) {
    this.rootView = rootView;
    this.deviceIdText = deviceIdText;
    this.deviceIpText = deviceIpText;
    this.deviceNameText = deviceNameText;
    this.devicePortText = devicePortText;
    this.deviceStatusText = deviceStatusText;
    this.deviceTypeText = deviceTypeText;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemDeviceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemDeviceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_device, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemDeviceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.deviceIdText;
      TextView deviceIdText = ViewBindings.findChildViewById(rootView, id);
      if (deviceIdText == null) {
        break missingId;
      }

      id = R.id.deviceIpText;
      TextView deviceIpText = ViewBindings.findChildViewById(rootView, id);
      if (deviceIpText == null) {
        break missingId;
      }

      id = R.id.deviceNameText;
      TextView deviceNameText = ViewBindings.findChildViewById(rootView, id);
      if (deviceNameText == null) {
        break missingId;
      }

      id = R.id.devicePortText;
      TextView devicePortText = ViewBindings.findChildViewById(rootView, id);
      if (devicePortText == null) {
        break missingId;
      }

      id = R.id.deviceStatusText;
      TextView deviceStatusText = ViewBindings.findChildViewById(rootView, id);
      if (deviceStatusText == null) {
        break missingId;
      }

      id = R.id.deviceTypeText;
      TextView deviceTypeText = ViewBindings.findChildViewById(rootView, id);
      if (deviceTypeText == null) {
        break missingId;
      }

      return new ItemDeviceBinding((CardView) rootView, deviceIdText, deviceIpText, deviceNameText,
          devicePortText, deviceStatusText, deviceTypeText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
