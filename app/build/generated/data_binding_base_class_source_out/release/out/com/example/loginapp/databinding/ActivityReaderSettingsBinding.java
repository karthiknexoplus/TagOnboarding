// Generated by view binder compiler. Do not edit!
package com.example.loginapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.loginapp.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityReaderSettingsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView currentRfPowerLabel;

  @NonNull
  public final TextView currentRfPowerText;

  @NonNull
  public final MaterialButton getButton;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final Spinner readerDropdown;

  @NonNull
  public final TextView readerIpLabel;

  @NonNull
  public final TextView readerIpText;

  @NonNull
  public final TextInputEditText rfPowerInput;

  @NonNull
  public final MaterialButton setButton;

  @NonNull
  public final TextView statusText;

  @NonNull
  public final TextView titleText;

  private ActivityReaderSettingsBinding(@NonNull ScrollView rootView,
      @NonNull TextView currentRfPowerLabel, @NonNull TextView currentRfPowerText,
      @NonNull MaterialButton getButton, @NonNull ProgressBar progressBar,
      @NonNull Spinner readerDropdown, @NonNull TextView readerIpLabel,
      @NonNull TextView readerIpText, @NonNull TextInputEditText rfPowerInput,
      @NonNull MaterialButton setButton, @NonNull TextView statusText,
      @NonNull TextView titleText) {
    this.rootView = rootView;
    this.currentRfPowerLabel = currentRfPowerLabel;
    this.currentRfPowerText = currentRfPowerText;
    this.getButton = getButton;
    this.progressBar = progressBar;
    this.readerDropdown = readerDropdown;
    this.readerIpLabel = readerIpLabel;
    this.readerIpText = readerIpText;
    this.rfPowerInput = rfPowerInput;
    this.setButton = setButton;
    this.statusText = statusText;
    this.titleText = titleText;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityReaderSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityReaderSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_reader_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityReaderSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.currentRfPowerLabel;
      TextView currentRfPowerLabel = ViewBindings.findChildViewById(rootView, id);
      if (currentRfPowerLabel == null) {
        break missingId;
      }

      id = R.id.currentRfPowerText;
      TextView currentRfPowerText = ViewBindings.findChildViewById(rootView, id);
      if (currentRfPowerText == null) {
        break missingId;
      }

      id = R.id.getButton;
      MaterialButton getButton = ViewBindings.findChildViewById(rootView, id);
      if (getButton == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.readerDropdown;
      Spinner readerDropdown = ViewBindings.findChildViewById(rootView, id);
      if (readerDropdown == null) {
        break missingId;
      }

      id = R.id.readerIpLabel;
      TextView readerIpLabel = ViewBindings.findChildViewById(rootView, id);
      if (readerIpLabel == null) {
        break missingId;
      }

      id = R.id.readerIpText;
      TextView readerIpText = ViewBindings.findChildViewById(rootView, id);
      if (readerIpText == null) {
        break missingId;
      }

      id = R.id.rfPowerInput;
      TextInputEditText rfPowerInput = ViewBindings.findChildViewById(rootView, id);
      if (rfPowerInput == null) {
        break missingId;
      }

      id = R.id.setButton;
      MaterialButton setButton = ViewBindings.findChildViewById(rootView, id);
      if (setButton == null) {
        break missingId;
      }

      id = R.id.statusText;
      TextView statusText = ViewBindings.findChildViewById(rootView, id);
      if (statusText == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      return new ActivityReaderSettingsBinding((ScrollView) rootView, currentRfPowerLabel,
          currentRfPowerText, getButton, progressBar, readerDropdown, readerIpLabel, readerIpText,
          rfPowerInput, setButton, statusText, titleText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
